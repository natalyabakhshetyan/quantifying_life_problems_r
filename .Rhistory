for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
#Markov model: state strings for a two-state model
#1
s_to_i <- 0.04 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
initial_state <- 2
} else {
initial_state <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
initial_state <- 1
}else {
initial_state <- 2
}
} else {
print("F off")
}
print(initial_state)
#2 and #3 make the same with a for loop
s_to_i <- 0.2 #transition probability from susceptible to infected (per day)
i_to_s <- 0.12
initial_state = 1 #1 for susceptible, 2 for infected
days <- 100
state.vec <- rep(initial_state, days + 1)
for (i in 1:days){
decider <- runif(1) #generate a random number between 0 and 1
if (initial_state == 1) {
if (decider < s_to_i){
state.vec[i] <- 2
} else {
state.vec[i] <- 1
}
}else if(initial_state == 2) {
if(decider < i_to_s) {
state.vec[i] <- 1
}else {
state.vec[i] <- 2
}
} else {
print("F off")
}
}
print(state.vec)
length((which(state.vec == 2))) # how many days in a 100 day period is a patient sick
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# NOTE: Walkthrough IDE
# Assign a character string to a variable
x <- "Hello World!"
# Print the variable
print(x)
# NOTE: Walkthrough IDE
